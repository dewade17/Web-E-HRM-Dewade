generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// ===== Enums =====

// DISESUAIKAN: Menambahkan role dari diagram
enum Role {
  KARYAWAN
  HR
  OPERASIONAL
  DIREKTUR
  SUPERADMIN // Ditambahkan
  SUBADMIN // Ditambahkan
  SUPERVISI // Ditambahkan
}

enum AtasanRole {
  HR
  OPERASIONAL
  DIREKTUR
  SUPERADMIN
}

enum CutiType {
  cuti
  sakit
  izin
}

enum ApproveStatus {
  disetujui
  ditolak
  pending
  menunggu // Ditambahkan dari diagram Cuti
}

enum WorkStatus {
  berjalan
  berhenti
  selesai
}

// BARU: Ditambahkan dari diagram User
enum StatusKerja {
  AKTIF
  TIDAK_AKTIF
  CUTI
}

// BARU: Ditambahkan dari diagram User
enum JenisKelamin {
  LAKI_LAKI
  PEREMPUAN
}

enum ShiftStatus {
  KERJA
  LIBUR
}

enum AbsensiStatus {
  tepat
  terlambat
}

enum LemburStatus {
  pending
  disetujui
  ditolak
}

enum Bulan {
  JANUARI
  FEBRUARI
  MARET
  APRIL
  MEI
  JUNI
  JULI
  AGUSTUS
  SEPTEMBER
  OKTOBER
  NOVEMBER
  DESEMBER
}

enum ReportStatus {
  terkirim
  disetujui
  ditolak
}

// Status baru khusus Agenda Kerja
enum AgendaStatus {
  teragenda
  diproses
  ditunda
  selesai
}

enum StatusKunjungan {
  diproses
  berlangsung
  selesai
}

// ====== In-app Notification ======
enum NotificationStatus {
  unread
  read
  archived
}

/// ===== Models =====

model Location {
  id_location String    @id @default(uuid()) @db.Char(36)
  nama_kantor String    @db.VarChar(255)
  latitude    Decimal   @db.Decimal(10, 6)
  longitude   Decimal   @db.Decimal(10, 6)
  radius      Int?
  created_at  DateTime  @default(now()) @db.DateTime(0)
  updated_at  DateTime  @updatedAt @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)

  Absensi_datang Absensi[] @relation("absen_datang")
  Absensi_pulang Absensi[] @relation("absen_pulang")
  User           User[]

  @@map("location")
}

model Broadcast {
  id_broadcasts String    @id @default(uuid()) @db.Char(36)
  title         String    @db.LongText
  message       String    @db.LongText
  created_at    DateTime  @default(now()) @db.DateTime(0)
  updated_at    DateTime  @updatedAt @db.DateTime(0)
  deleted_at    DateTime? @db.DateTime(0)

  recipients BroadcastRecipient[]

  @@map("broadcasts")
}

model BroadcastRecipient {
  id_broadcast_recipients String    @id @default(uuid()) @db.Char(36)
  id_broadcast            String    @db.Char(36)
  id_user                 String    @db.Char(36)
  nama_karyawan_snapshot  String    @db.VarChar(255)
  created_at              DateTime  @default(now()) @db.DateTime(0)
  updated_at              DateTime  @updatedAt @db.DateTime(0)
  deleted_at              DateTime? @db.DateTime(0)

  broadcast Broadcast @relation(fields: [id_broadcast], references: [id_broadcasts], onDelete: Cascade, onUpdate: Cascade)
  user      User      @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_broadcast])
  @@index([id_user])
  @@map("broadcasts_recipients")
}

model PolaKerja {
  id_pola_kerja         String    @id @default(uuid()) @db.Char(36)
  nama_pola_kerja       String    @db.VarChar(255)
  jam_mulai             DateTime  @db.DateTime(0)
  jam_selesai           DateTime  @db.DateTime(0)
  jam_istirahat_mulai   DateTime? @db.DateTime(0)
  jam_istirahat_selesai DateTime? @db.DateTime(0)
  maks_jam_istirahat    Int?
  created_at            DateTime  @default(now()) @db.DateTime(0)
  updated_at            DateTime  @updatedAt @db.DateTime(0)
  deleted_at            DateTime? @db.DateTime(0)

  shifts ShiftKerja[]

  @@map("pola_kerja")
}

model ShiftKerja {
  id_shift_kerja  String      @id @default(uuid()) @db.Char(36)
  id_user         String      @db.Char(36)
  tanggal_mulai   DateTime?   @db.Date
  tanggal_selesai DateTime?   @db.Date
  hari_kerja      String
  status          ShiftStatus
  id_pola_kerja   String?     @db.Char(36)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user      User       @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  polaKerja PolaKerja? @relation(fields: [id_pola_kerja], references: [id_pola_kerja], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_user, tanggal_mulai])
  @@index([id_pola_kerja])
  @@map("shift_kerja")
}

model Agenda {
  id_agenda   String    @id @default(uuid()) @db.Char(36)
  nama_agenda String    @db.LongText
  created_at  DateTime  @default(now()) @db.DateTime(0)
  updated_at  DateTime  @updatedAt @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)

  items AgendaKerja[]

  @@map("agenda")
}

model AgendaKerja {
  id_agenda_kerja  String       @id @default(uuid()) @db.Char(36)
  id_absensi       String?      @db.Char(36)
  id_agenda        String       @db.Char(36)
  id_user          String       @db.Char(36)
  deskripsi_kerja  String       @db.LongText
  start_date       DateTime?    @db.DateTime(0)
  end_date         DateTime?    @db.DateTime(0)
  duration_seconds Int?
  status           AgendaStatus
  kebutuhan_agenda String?      @db.VarChar(255)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user    User     @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  absensi Absensi? @relation(fields: [id_absensi], references: [id_absensi], onDelete: SetNull, onUpdate: Cascade)
  agenda  Agenda   @relation(fields: [id_agenda], references: [id_agenda], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_user, start_date])
  @@index([id_absensi])
  @@index([id_agenda])
  @@map("agenda_kerja")
}

model KategoriKunjungan {
  id_kategori_kunjungan String    @id @default(uuid()) @db.Char(36)
  kategori_kunjungan    String    @unique @db.VarChar(191)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  kunjungan Kunjungan[]

  @@map("kategori_kunjungan")
}

model Kunjungan {
  id_kunjungan             String    @id @default(uuid()) @db.Char(36)
  id_user                  String    @db.Char(36)
  id_kategori_kunjungan    String?   @db.Char(36)
  tanggal                  DateTime? @db.Date
  jam_mulai                DateTime? @db.DateTime(0)
  jam_selesai              DateTime? @db.DateTime(0)
  deskripsi                String?   @db.LongText
  jam_checkin              DateTime? @db.DateTime(0)
  jam_checkout             DateTime? @db.DateTime(0)
  start_latitude           Decimal?  @db.Decimal(10, 6)
  start_longitude          Decimal?  @db.Decimal(10, 6)
  end_latitude             Decimal?  @db.Decimal(10, 6)
  end_longitude            Decimal?  @db.Decimal(10, 6)
  lampiran_kunjungan_url   String?   @db.LongText
  status_kunjungan         StatusKunjungan @default(diproses)
  duration                 Int?
  hand_over                String?   @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user     User               @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  kategori KategoriKunjungan? @relation(fields: [id_kategori_kunjungan], references: [id_kategori_kunjungan], onDelete: SetNull, onUpdate: Cascade)
  reports  KunjunganReportRecipient[]

  @@index([id_user, tanggal])
  @@index([id_kategori_kunjungan])
  @@map("kunjungan")
}

model KunjunganReportRecipient {
  id_kunjungan_report_recipient String    @id @default(uuid()) @db.Char(36)
  id_kunjungan                  String    @db.Char(36)
  id_user                       String    @db.Char(36)
  recipient_nama_snapshot       String    @db.VarChar(255)
  recipient_role_snapshot       AtasanRole?
  catatan                       String?   @db.LongText
  status                        ReportStatus @default(terkirim)
  notified_at                   DateTime? @db.DateTime(0)
  read_at                       DateTime? @db.DateTime(0)
  acted_at                      DateTime? @db.DateTime(0)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  kunjungan Kunjungan @relation(fields: [id_kunjungan], references: [id_kunjungan], onDelete: Cascade, onUpdate: Cascade)
  recipient User      @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_kunjungan, id_user])
  @@index([id_kunjungan])
  @@index([id_user])
  @@map("kunjungan_report_recipients")
}

model User {
  id_user                      String    @id @default(uuid()) @db.Char(36)
  nama_pengguna                String    @db.VarChar(255)
  email                        String    @unique @db.VarChar(255)
  password_hash                String    @db.VarChar(255)
  kontak                       String?   @db.VarChar(32)
  kontak_darurat               String?   @db.VarChar(32)
  password_updated_at          DateTime? @db.DateTime(0)
  agama                        String?   @db.VarChar(32)
  foto_profil_user             String?   @db.LongText
  tanggal_lahir                DateTime? @db.Date
  role                         Role
  id_departement               String?   @db.Char(36)
  id_location                  String?   @db.Char(36)
  reset_password_token         String?   @db.VarChar(255)
  reset_password_expires_at    DateTime? @db.DateTime(0)
  tempat_lahir                 String?   @db.VarChar(255)
  jenis_kelamin                JenisKelamin?
  golongan_darah               String?   @db.VarChar(5)
  status_perkawinan            String?   @db.VarChar(50)
  alamat_ktp                   String?   @db.LongText
  alamat_ktp_provinsi          String?   @db.VarChar(255)
  alamat_ktp_kota              String?   @db.VarChar(255)
  alamat_domisili              String?   @db.LongText
  alamat_domisili_provinsi     String?   @db.VarChar(255)
  alamat_domisili_kota         String?   @db.VarChar(255)
  zona_waktu                   String?   @db.VarChar(50)
  jenjang_pendidikan           String?   @db.VarChar(50)
  jurusan                      String?   @db.VarChar(100)
  nama_institusi_pendidikan    String?   @db.VarChar(255)
  tahun_lulus                  Int?
  nomor_induk_karyawan         String?   @unique @db.VarChar(100)
  divisi                       String?   @db.VarChar(100)
  id_jabatan                   String?   @db.Char(36)
  status_kerja                 StatusKerja?
  tanggal_mulai_bekerja        DateTime? @db.Date
  nomor_rekening               String?   @db.VarChar(50)
  jenis_bank                   String?   @db.VarChar(50)
  catatan_delete               String?   @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  departement                Departement?               @relation(fields: [id_departement], references: [id_departement], onDelete: SetNull, onUpdate: Cascade)
  kantor                     Location?                  @relation(fields: [id_location], references: [id_location], onDelete: Restrict, onUpdate: Cascade)
  jabatan                    Jabatan?                   @relation(fields: [id_jabatan], references: [id_jabatan], onDelete: SetNull, onUpdate: Cascade)
  faces                      Face[]
  agendas                    AgendaKerja[]
  shifts                     ShiftKerja[]
  story_planners             StoryPlanner[]
  absensi                    Absensi[]
  lembur                     Lembur[]
  shift_storyPlanner         ShiftStoryPlanner[]
  broadcast_rcv              BroadcastRecipient[]
  devices                    Device[]
  lembur_approvals           LemburApproval[]           @relation("LemburApproval_approver_user_idToUser")
  absensi_reports_received   AbsensiReportRecipient[]
  kunjungan                  Kunjungan[]
  kunjungan_reports_received KunjunganReportRecipient[]
  notifications              Notification[]
  istirahat                  Istirahat[]

  supervised_department Departement? @relation("SupervisorForDepartment")

  // ===== RELASI BARU UNTUK APPROVAL =====
  approvals_pengajuan_cuti ApprovalPengajuanCuti[]    @relation("ApprovalPengajuanCuti_approver")
  approvals_izin_sakit     ApprovalIzinSakit[]        @relation("ApprovalIzinSakit_approver")
  approvals_izin_jam       ApprovalPengajuanIzinJam[] @relation("ApprovalIzinJam_approver")
  approvals_tukar_hari     ApprovalIzinTukarHari[]    @relation("ApprovalTukarHari_approver")

  // ===== RELASI BARU UNTUK PENGAJUAN =====
  pengajuan_cuti       PengajuanCuti[]
  pengajuan_izin_sakit PengajuanIzinSakit[]
  pengajuan_izin_jam   PengajuanIzinJam[]
  izin_tukar_hari      IzinTukarHari[]
  konfigurasi_cuti     CutiKonfigurasi[]

  // ===== BARU: RELASI UNTUK HANDOVER TAG =====
  tagged_in_cuti       HandoverCuti[]
  tagged_in_sakit      HandoverIzinSakit[]
  tagged_in_izin_jam   HandoverIzinJam[]
  tagged_in_tukar_hari HandoverTukarHari[]

  @@index([id_departement])
  @@index([id_location])
  @@index([id_jabatan])
  @@map("user")
}

model Departement {
  id_departement   String  @id @default(uuid()) @db.Char(36)
  nama_departement String  @db.VarChar(256)
  id_supervisor    String? @unique @db.Char(36)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  users        User[]
  jabatan      Jabatan[]
  supervisor   User?        @relation("SupervisorForDepartment", fields: [id_supervisor], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
  StoryPlanner StoryPlanner[]

  @@map("departement")
}

model Jabatan {
  id_jabatan       String  @id @default(uuid()) @db.Char(36)
  nama_jabatan     String  @db.VarChar(256)
  id_departement   String? @db.Char(36)
  id_induk_jabatan String? @db.Char(36)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  departement Departement? @relation(fields: [id_departement], references: [id_departement], onDelete: SetNull, onUpdate: Cascade)
  induk       Jabatan?     @relation("HirarkiJabatan", fields: [id_induk_jabatan], references: [id_jabatan], onDelete: SetNull, onUpdate: NoAction)
  bawahan     Jabatan[]    @relation("HirarkiJabatan")
  users       User[]

  @@index([id_departement])
  @@index([id_induk_jabatan])
  @@map("jabatan")
}

model Istirahat {
  id_istirahat              String    @id @default(uuid()) @db.Char(36)
  id_user                   String    @db.Char(36)
  id_absensi                String    @db.Char(36)
  tanggal_istirahat         DateTime  @db.Date
  start_istirahat           DateTime  @db.DateTime(0)
  end_istirahat             DateTime? @db.DateTime(0)
  start_istirahat_latitude  Decimal?  @db.Decimal(10, 6)
  start_istirahat_longitude Decimal?  @db.Decimal(10, 6)
  end_istirahat_latitude    Decimal?  @db.Decimal(10, 6)
  end_istirahat_longitude   Decimal?  @db.Decimal(10, 6)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user    User    @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  absensi Absensi @relation(fields: [id_absensi], references: [id_absensi], onDelete: Cascade, onUpdate: Cascade)

  @@index([id_user, tanggal_istirahat])
  @@index([id_absensi])
  @@map("istirahat")
}

model Face {
  id_face    String    @id @default(uuid()) @db.Char(36)
  id_user    String    @db.Char(36)
  image_face String    @db.LongText
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user User @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)

  @@index([id_user])
  @@map("face")
}

model StoryPlanner {
  id_story        String     @id @default(uuid()) @db.Char(36)
  id_user         String     @db.Char(36)
  id_departement  String?    @db.Char(36)
  deskripsi_kerja String     @db.LongText
  count_time      DateTime?  @db.DateTime(0)
  status          WorkStatus

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user        User         @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  departement Departement? @relation(fields: [id_departement], references: [id_departement], onDelete: SetNull, onUpdate: Cascade)

  @@index([id_user])
  @@index([id_departement])
  @@map("story_planner")
}

model Device {
  id_device            String    @id @default(uuid()) @db.Char(36)
  id_user              String    @db.Char(36)
  device_label         String?   @db.VarChar(255)
  platform             String?   @db.VarChar(50)
  os_version           String?   @db.VarChar(50)
  app_version          String?   @db.VarChar(50)
  device_identifier    String?   @db.VarChar(191)
  last_seen            DateTime? @db.DateTime(0)
  fcm_token            String?   @db.VarChar(1024)
  fcm_token_updated_at DateTime? @db.DateTime(0)
  push_enabled         Boolean   @default(true)
  last_push_at         DateTime? @db.DateTime(0)
  failed_push_count    Int       @default(0)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user User @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)

  @@index([id_user])
  @@index([device_identifier])
  @@index([fcm_token(length: 191)])
  @@map("device")
}

model Absensi {
  id_absensi            String    @id @default(uuid()) @db.Char(36)
  id_user               String    @db.Char(36)
  face_verified_masuk   Boolean
  face_verified_pulang  Boolean
  tanggal               DateTime? @db.Date
  id_lokasi_pulang      String?   @db.Char(36)
  id_lokasi_datang      String?   @db.Char(36)
  jam_masuk             DateTime? @db.DateTime(0)
  jam_pulang            DateTime? @db.DateTime(0)
  status_masuk          AbsensiStatus?
  status_pulang         AbsensiStatus?
  in_latitude           Decimal?  @db.Decimal(10, 6)
  in_longitude          Decimal?  @db.Decimal(10, 6)
  out_latitude          Decimal?  @db.Decimal(10, 6)
  out_longitude         Decimal?  @db.Decimal(10, 6)
  created_at            DateTime  @default(now()) @db.DateTime(0)
  updated_at            DateTime  @updatedAt @db.DateTime(0)
  deleted_at            DateTime? @db.DateTime(0)

  user              User                     @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  lokasiIn          Location?                @relation("absen_datang", fields: [id_lokasi_datang], references: [id_location], onDelete: SetNull, onUpdate: Cascade)
  lokasiOut         Location?                @relation("absen_pulang", fields: [id_lokasi_pulang], references: [id_location], onDelete: SetNull, onUpdate: Cascade)
  agendas           AgendaKerja[]
  report_recipients AbsensiReportRecipient[]
  catatan           Catatan[]
  istirahat         Istirahat[]

  @@unique([id_user, tanggal])
  @@index([id_user, tanggal])
  @@index([id_lokasi_datang])
  @@index([id_lokasi_pulang])
  @@map("Absensi")
}

model AbsensiReportRecipient {
  id_absensi_report_recipient String    @id @default(uuid()) @db.Char(36)
  id_absensi                  String    @db.Char(36)
  id_user                     String    @db.Char(36)
  recipient_nama_snapshot     String    @db.VarChar(255)
  recipient_role_snapshot     AtasanRole?
  catatan                     String?   @db.LongText
  status                      ReportStatus @default(terkirim)
  notified_at                 DateTime? @db.DateTime(0)
  read_at                     DateTime? @db.DateTime(0)
  acted_at                    DateTime? @db.DateTime(0)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  absensi   Absensi @relation(fields: [id_absensi], references: [id_absensi], onDelete: Cascade, onUpdate: Cascade)
  recipient User    @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_absensi, id_user])
  @@index([id_absensi])
  @@index([id_user])
  @@map("absensi_report_recipients")
}

model Catatan {
  id_catatan        String    @id @default(uuid()) @db.Char(36)
  id_absensi        String    @db.Char(36)
  deskripsi_catatan String    @db.LongText
  lampiran_url      String?   @db.LongText
  created_at        DateTime  @default(now()) @db.DateTime(0)
  updated_at        DateTime  @updatedAt @db.DateTime(0)
  deleted_at        DateTime? @db.DateTime(0)

  absensi Absensi @relation(fields: [id_absensi], references: [id_absensi], onDelete: Cascade, onUpdate: Cascade)

  @@index([id_absensi])
  @@map("catatan")
}

model Notification {
  id_notification String             @id @default(uuid()) @db.Char(36)
  id_user         String             @db.Char(36)
  title           String             @db.VarChar(255)
  body            String             @db.LongText
  data_json       String?            @db.LongText
  related_table   String?            @db.VarChar(64)
  related_id      String?            @db.Char(36)
  status          NotificationStatus @default(unread)
  seen_at         DateTime?          @db.DateTime(0)
  read_at         DateTime?          @db.DateTime(0)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  recipient User @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)

  @@index([id_user, status, created_at])
  @@index([related_table, related_id])
  @@map("notifications")
}

// BARU: Model untuk menyimpan template notifikasi yang bisa di-custom
model NotificationTemplate {
  id            String   @id @default(uuid())
  eventTrigger  String   @unique @map("event_trigger")
  description   String
  titleTemplate String   @map("title_template")
  bodyTemplate  String   @db.Text @map("body_template")
  placeholders  String?
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("notification_templates")
}

model Lembur {
  id_lembur     String       @id @default(uuid()) @db.Char(36)
  id_user       String       @db.Char(36)
  tanggal       DateTime?    @db.Date
  jam_mulai     DateTime?    @db.DateTime(0)
  jam_selesai   DateTime?    @db.DateTime(0)
  alasan        String?      @db.LongText
  status        LemburStatus
  current_level Int?
  created_at    DateTime     @default(now()) @db.DateTime(0)
  updated_at    DateTime     @updatedAt @db.DateTime(0)
  deleted_at    DateTime?    @db.DateTime(0)

  user      User             @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  approvals LemburApproval[]

  @@index([id_user, tanggal])
  @@index([status])
  @@map("Lembur")
}

model LemburApproval {
  id_lembur_approval String        @id @default(uuid()) @db.Char(36)
  id_lembur          String        @db.Char(36)
  level              Int
  approver_user_id   String?       @db.Char(36)
  approver_role      Role?
  decision           ApproveStatus @default(pending)
  decided_at         DateTime?     @db.DateTime(0)
  note               String?       @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  lembur   Lembur @relation(fields: [id_lembur], references: [id_lembur], onDelete: Cascade, onUpdate: Cascade)
  approver User?  @relation("LemburApproval_approver_user_idToUser", fields: [approver_user_id], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_lembur, level])
  @@index([approver_user_id])
  @@map("lembur_approval")
}

model JadwalStoryPlanner {
  id_jadwal_story_planner String    @id @default(uuid()) @db.Char(36)
  Tahun                   DateTime? @db.Date
  Bulan                   Bulan
  keterangan              String?   @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  shifts ShiftStoryPlanner[]

  @@map("jadwal_story_planer")
}

model ShiftStoryPlanner {
  id_shift_story_planner  String @id @default(uuid()) @db.Char(36)
  id_jadwal_story_planner String @db.Char(36)
  id_user                 String @db.Char(36)
  hari_story_planner      String

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  jadwal JadwalStoryPlanner @relation(fields: [id_jadwal_story_planner], references: [id_jadwal_story_planner], onDelete: Cascade, onUpdate: Cascade)
  user   User               @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_jadwal_story_planner])
  @@index([id_user])
  @@map("shift_story_planer")
}

model KategoriSakit {
  id_kategori_sakit String    @id @default(uuid()) @db.Char(36)
  nama_kategori     String    @db.VarChar(255)
  created_at        DateTime  @default(now()) @db.DateTime(0)
  updated_at        DateTime  @updatedAt @db.DateTime(0)
  deleted_at        DateTime? @db.DateTime(0)
  sakit             PengajuanIzinSakit[]

  @@map("kategori_sakit")
}

model CutiKonfigurasi {
  id_cuti_konfigurasi String    @id @default(uuid()) @db.Char(36)
  id_user             String    @db.Char(36)
  bulan               Bulan
  kouta_cuti          Int

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user User @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_user, bulan])
  @@index([id_user])
  @@map("cuti_konfigurasi")
}

model KategoriCuti {
  id_kategori_cuti String    @id @default(uuid()) @db.Char(36)
  nama_kategori    String    @db.VarChar(255)
  created_at       DateTime  @default(now()) @db.DateTime(0)
  updated_at       DateTime  @updatedAt @db.DateTime(0)
  deleted_at       DateTime? @db.DateTime(0)

  pengajuan_cuti PengajuanCuti[]

  @@map("kategori_cuti")
}

model PengajuanCuti {
  id_pengajuan_cuti   String    @id @default(uuid()) @db.Char(36)
  id_user             String    @db.Char(36)
  id_kategori_cuti    String    @db.Char(36)
  keperluan           String?   @db.LongText
  tanggal_mulai       DateTime  @db.Date
  tanggal_masuk_kerja DateTime  @db.Date
  handover            String?   @db.LongText
  status              ApproveStatus @default(pending)
  current_level       Int?
  jenis_pengajuan     String    @db.VarChar(32) 

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user            User                    @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  kategori_cuti   KategoriCuti            @relation(fields: [id_kategori_cuti], references: [id_kategori_cuti], onDelete: Restrict, onUpdate: Cascade)
  approvals       ApprovalPengajuanCuti[]
  handover_users  HandoverCuti[]

  @@index([id_user])
  @@index([id_kategori_cuti])
  @@map("pengajuan_cuti")
}

model ApprovalPengajuanCuti {
  id_approval_pengajuan_cuti String        @id @default(uuid()) @db.Char(36)
  id_pengajuan_cuti          String        @db.Char(36)
  level                      Int
  approver_user_id           String?       @db.Char(36)
  approver_role              Role?
  decision                   ApproveStatus @default(pending)
  decided_at                 DateTime?     @db.DateTime(0)
  note                       String?       @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  pengajuan_cuti PengajuanCuti @relation(fields: [id_pengajuan_cuti], references: [id_pengajuan_cuti], onDelete: Cascade, onUpdate: Cascade)
  approver       User?         @relation("ApprovalPengajuanCuti_approver", fields: [approver_user_id], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_pengajuan_cuti, level])
  @@index([approver_user_id])
  @@map("approval_pengajuan_cuti")
}

model PengajuanIzinSakit {
  id_pengajuan_izin_sakit String    @id @default(uuid()) @db.Char(36)
  id_user                 String    @db.Char(36)
  id_kategori_sakit       String    @db.Char(36)
  handover                String?   @db.LongText
  lampiran_izin_sakit_url String?   @db.LongText
  status                  ApproveStatus @default(pending)
  current_level           Int?
  jenis_pengajuan         String    @db.VarChar(32)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user           User                @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  kategori       KategoriSakit       @relation(fields: [id_kategori_sakit], references: [id_kategori_sakit], onDelete: Restrict, onUpdate: Cascade)
  approvals      ApprovalIzinSakit[]
  handover_users HandoverIzinSakit[]

  @@index([id_user])
  @@index([id_kategori_sakit])
  @@map("pengajuan_izin_sakit")
}

model ApprovalIzinSakit {
  id_approval_izin_sakit    String    @id @default(uuid()) @db.Char(36)
  id_pengajuan_izin_sakit   String    @db.Char(36)
  level                     Int
  approver_user_id          String?   @db.Char(36)
  approver_role             Role?
  decision                  ApproveStatus @default(pending)
  decided_at                DateTime? @db.DateTime(0)
  note                      String?   @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  pengajuan_izin_sakit PengajuanIzinSakit @relation(fields: [id_pengajuan_izin_sakit], references: [id_pengajuan_izin_sakit], onDelete: Cascade, onUpdate: Cascade)
  approver             User?              @relation("ApprovalIzinSakit_approver", fields: [approver_user_id], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_pengajuan_izin_sakit, level])
  @@index([approver_user_id])
  @@map("approval_izin_sakit")
}

model PengajuanIzinJam {
  id_pengajuan_izin_jam   String    @id @default(uuid()) @db.Char(36)
  id_user                 String    @db.Char(36)
  tanggal_izin            DateTime  @db.Date
  jam_mulai               DateTime  @db.DateTime(0)
  jam_selesai             DateTime  @db.DateTime(0)
  kategori                String    @db.VarChar(255)
  keperluan               String?   @db.LongText
  handover                String?   @db.LongText
  lampiran_izin_jam_url   String?   @db.LongText
  status                  ApproveStatus @default(pending)
  current_level           Int?
  jenis_pengajuan         String    @db.VarChar(32)

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user           User                       @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  approvals      ApprovalPengajuanIzinJam[]
  handover_users HandoverIzinJam[]

  @@index([id_user, tanggal_izin])
  @@map("pengajuan_izin_jam")
}

model ApprovalPengajuanIzinJam {
  id_approval_pengajuan_izin_jam String        @id @default(uuid()) @db.Char(36)
  id_pengajuan_izin_jam          String        @db.Char(36)
  level                          Int
  approver_user_id               String?       @db.Char(36)
  approver_role                  Role?
  decision                       ApproveStatus @default(pending)
  decided_at                     DateTime?     @db.DateTime(0)
  note                           String?       @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  pengajuan_izin_jam PengajuanIzinJam @relation(fields: [id_pengajuan_izin_jam], references: [id_pengajuan_izin_jam], onDelete: Cascade, onUpdate: Cascade)
  approver           User?             @relation("ApprovalIzinJam_approver", fields: [approver_user_id], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_pengajuan_izin_jam, level])
  @@index([approver_user_id])
  @@map("approval_pengajuan_izin_jam")
}

model IzinTukarHari {
  id_izin_tukar_hari String    @id @default(uuid()) @db.Char(36)
  id_user            String    @db.Char(36)
  hari_izin          DateTime  @db.Date
  hari_pengganti     DateTime  @db.Date
  kategori           String    @db.VarChar(255)
  keperluan          String?   @db.LongText
  handover           String?   @db.LongText
  status             ApproveStatus @default(pending)
  current_level      Int?
  jenis_pengajuan    String    @db.VarChar(32) 

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  user           User                    @relation(fields: [id_user], references: [id_user], onDelete: Restrict, onUpdate: Cascade)
  approvals      ApprovalIzinTukarHari[]
  handover_users HandoverTukarHari[]

  @@index([id_user, hari_izin])
  @@map("izin_tukar_hari")
}

model ApprovalIzinTukarHari {
  id_approval_izin_tukar_hari String        @id @default(uuid()) @db.Char(36)
  id_izin_tukar_hari          String        @db.Char(36)
  level                       Int
  approver_user_id            String?       @db.Char(36)
  approver_role               Role?
  decision                    ApproveStatus @default(pending)
  decided_at                  DateTime?     @db.DateTime(0)
  note                        String?       @db.LongText

  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @updatedAt @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)

  izin_tukar_hari IzinTukarHari @relation(fields: [id_izin_tukar_hari], references: [id_izin_tukar_hari], onDelete: Cascade, onUpdate: Cascade)
  approver        User?         @relation("ApprovalTukarHari_approver", fields: [approver_user_id], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@index([id_izin_tukar_hari, level])
  @@index([approver_user_id])
  @@map("approval_izin_tukar_hari")
}

model HandoverCuti {
  id_handover_cuti  String   @id @default(uuid()) @db.Char(36)
  id_pengajuan_cuti String   @db.Char(36)
  id_user_tagged    String   @db.Char(36)
  created_at        DateTime @default(now()) @db.DateTime(0)

  pengajuan_cuti PengajuanCuti @relation(fields: [id_pengajuan_cuti], references: [id_pengajuan_cuti], onDelete: Cascade, onUpdate: Cascade)
  user           User          @relation(fields: [id_user_tagged], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_pengajuan_cuti, id_user_tagged])
  @@index([id_pengajuan_cuti])
  @@index([id_user_tagged])
  @@map("handover_cuti")
}

model HandoverIzinSakit {
  id_handover_sakit       String   @id @default(uuid()) @db.Char(36)
  id_pengajuan_izin_sakit String   @db.Char(36)
  id_user_tagged          String   @db.Char(36)
  created_at              DateTime @default(now()) @db.DateTime(0)

  pengajuan_izin_sakit PengajuanIzinSakit @relation(fields: [id_pengajuan_izin_sakit], references: [id_pengajuan_izin_sakit], onDelete: Cascade, onUpdate: Cascade)
  user                 User               @relation(fields: [id_user_tagged], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_pengajuan_izin_sakit, id_user_tagged])
  @@index([id_pengajuan_izin_sakit])
  @@index([id_user_tagged])
  @@map("handover_izin_sakit")
}

model HandoverIzinJam {
  id_handover_jam       String   @id @default(uuid()) @db.Char(36)
  id_pengajuan_izin_jam String   @db.Char(36)
  id_user_tagged        String   @db.Char(36)
  created_at            DateTime @default(now()) @db.DateTime(0)

  pengajuan_izin_jam PengajuanIzinJam @relation(fields: [id_pengajuan_izin_jam], references: [id_pengajuan_izin_jam], onDelete: Cascade, onUpdate: Cascade)
  user               User             @relation(fields: [id_user_tagged], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_pengajuan_izin_jam, id_user_tagged])
  @@index([id_pengajuan_izin_jam])
  @@index([id_user_tagged])
  @@map("handover_izin_jam")
}

model HandoverTukarHari {
  id_handover_tukar_hari String   @id @default(uuid()) @db.Char(36)
  id_izin_tukar_hari     String   @db.Char(36)
  id_user_tagged         String   @db.Char(36)
  created_at             DateTime @default(now()) @db.DateTime(0)

  izin_tukar_hari IzinTukarHari @relation(fields: [id_izin_tukar_hari], references: [id_izin_tukar_hari], onDelete: Cascade, onUpdate: Cascade)
  user            User          @relation(fields: [id_user_tagged], references: [id_user], onDelete: Restrict, onUpdate: Cascade)

  @@unique([id_izin_tukar_hari, id_user_tagged])
  @@index([id_izin_tukar_hari])
  @@index([id_user_tagged])
  @@map("handover_tukar_hari")
}
